name: Zadanie2

on: 
  workflow_dispatch:
  push:
    branches:
    - main
    tags:
    - 'v*.*.*'

env:
  PORT: 8080
  WEATHER_API_KEY: ${{secrets.WEATHER_API_KEY}}
  TZ: Europe/Warsaw
  TEST_TAG: user/zad2:test

jobs:
  ci_step:
    name: Build, scan, tag and push Docker image to DockerHub
    runs-on: ubuntu-24.04

    steps:
      -
        name: Check out the source_repo
        uses: actions/checkout@v4

      -
        name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{github.repository_owner}}/zadanie2
          tags: |
            type=semver,pattern={{version}},priority=300
            type=sha,format=short,prefix=sha_,priority=100

      -
        name: QEMU set-up
        uses: docker/setup-qemu-action@v3

      -
        name: Buildx set-up
        uses: docker/setup-buildx-action@v3

      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{vars.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}
      
      -
        name: Login to GitHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{ secrets.GH_TOKEN }}

      -
        name: Build Docker image (test)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          load: true
          cache-from: |
            type=registry,ref=${{vars.DOCKERHUB_USERNAME}}/zadanie2_cache:cache_${{ github.ref_name }}
            type=registry,ref=${{vars.DOCKERHUB_USERNAME}}/zadanie2_cache:cache_main
          cache-to: |
            type=registry,ref=${{vars.DOCKERHUB_USERNAME}}/zadanie2_cache:cache_${{ github.ref_name }},mode=max
          tags: ${{ env.TEST_TAG }}


      -
        name: Scan
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: ${{ env.TEST_TAG }}
          format: table
          exit-code: 1
          severity: CRITICAL,HIGH
          ignore-unfixed: true
        
      -
        name: Build and push Docker image
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: |
            type=registry,ref=${{vars.DOCKERHUB_USERNAME}}/zadanie2_cache:cache_${{ github.ref_name }}
            type=registry,ref=${{vars.DOCKERHUB_USERNAME}}/zadanie2_cache:cache_main
          cache-to: |
            type=registry,ref=${{vars.DOCKERHUB_USERNAME}}/zadanie2_cache:cache_${{ github.ref_name }},mode=max
          tags: ${{ steps.meta.outputs.tags }}

      


